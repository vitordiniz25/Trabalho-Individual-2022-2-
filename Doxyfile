# Doxyfile 1.8.17

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project.

# All text after a pound (#) character is considered a comment and will be
# ignored.

# The PROJECT_NAME tag is a single word (or a sequence of words surrounded
# by quotes) that should identify the project.
PROJECT_NAME           = "My Library"

# The PROJECT_NUMBER tag can be used to enter a project or revision number.
PROJECT_NUMBER         = "1.0"

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
# base path where the generated documentation will be put.
OUTPUT_DIRECTORY       = doc

# The OUTPUT_LANGUAGE tag is used to specify the language in which all
# documentation generated by doxygen is written. Doxygen will use this
# information to generate all constant output in the proper language.
OUTPUT_LANGUAGE        = English

# The INPUT tag can be used to specify the files and/or directories that contain
# documented source files. You may enter file names like "myfile.cpp" or
# directories like "/usr/src/myproject". Separate the files or directories
# with spaces.
INPUT                  = include/ src/

# The FILE_PATTERNS tag can be used to specify one or more wildcard pattern (like
# *.cpp and *.h) to filter out the source-files in the directories.
# If left blank the following patterns are tested:
# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh *.hxx
# *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm
FILE_PATTERNS          = *.c \
                         *.cc \
                         *.cxx \
                         *.cpp \
                         *.c++ \
                         *.h \
                         *.hh \
                         *.hxx \
                         *.hpp \
                         *.idl \
                         *.odl

# The RECURSIVE tag can be used to turn specify whether or not subdirectories
# should be searched for input files as well.
RECURSIVE              = YES

# The EXCLUDE tag can be used to specify files and/or directories that should
# excluded from the INPUT source files. This way you can easily exclude a
# subdirectory from a directory tree whose root is specified with the INPUT tag.

# The EXAMPLE_PATH tag can be used to specify one or more files or directories
# that contain example code fragments that are included (see the \include
# command).

# The IMAGE_PATH tag can be used to specify one or more files or directories
# that contain image that are included in the documentation (see the \image
# command).

# The EXTRACT_ALL tag can be used to specify whether or not doxygen should
# extract all information out of the source files. If set to YES doxygen will
# assume all entities in documentation are documented, even if no documentation
# was
